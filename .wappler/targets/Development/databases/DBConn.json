{
  "type": "postgres",
  "connection": {
    "host": "db.zqtwnmvlcnrqwxrhnmsh.supabase.co",
    "port": 5432,
    "user": "postgres",
    "password": "08efgcUtauAaqmHf",
    "database": "postgres",
    "ssl": {
      "rejectUnauthorized": false
    }
  },
  "direct": true,
  "schema": {
    "schemas": [
      "pgbouncer",
      "public",
      "extensions",
      "storage",
      "auth",
      "realtime",
      "graphql_public",
      "graphql",
      "pgsodium",
      "pgsodium_masks",
      "vault"
    ],
    "tables": {
      "Orders": {
        "db": {
          "schema": "public"
        }
      },
      "Members": {
        "db": {
          "schema": "public"
        },
        "columns": {
          "created_at": {
            "db": {
              "type": "timestamp",
              "default": "now()",
              "useTz": true,
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "business_line": {
            "db": {
              "type": "text",
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "first_name": {
            "db": {
              "type": "text",
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "last_name": {
            "db": {
              "type": "text",
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "company_name": {
            "db": {
              "type": "text",
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "email": {
            "db": {
              "type": "text",
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "telephone": {
            "db": {
              "type": "text",
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "address1": {
            "db": {
              "type": "text",
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "address2": {
            "db": {
              "type": "text",
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "city": {
            "db": {
              "type": "text",
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "county": {
            "db": {
              "type": "text",
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "postcode": {
            "db": {
              "type": "text",
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "country": {
            "db": {
              "type": "text",
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "member_id": {
            "db": {
              "type": "bigInteger",
              "primary": false,
              "unique": true,
              "nullable": false
            }
          }
        }
      },
      "Perks": {
        "db": {
          "schema": "public"
        }
      },
      "storage.migrations": {
        "db": {
          "schema": "storage"
        }
      },
      "storage.buckets": {
        "db": {
          "schema": "storage"
        },
        "refs": {
          "storage.objects": "bucket_id"
        }
      },
      "storage.objects": {
        "db": {
          "schema": "storage"
        }
      },
      "auth.instances": {
        "db": {
          "schema": "auth",
          "comment": "Auth: Manages users across multiple sites."
        }
      },
      "auth.schema_migrations": {
        "db": {
          "schema": "auth",
          "comment": "Auth: Manages updates to the auth system."
        }
      },
      "auth.refresh_tokens": {
        "db": {
          "schema": "auth",
          "comment": "Auth: Store of tokens used to refresh JWT tokens once they expire."
        }
      },
      "auth.audit_log_entries": {
        "db": {
          "schema": "auth",
          "comment": "Auth: Audit trail for user actions."
        }
      },
      "auth.mfa_factors": {
        "db": {
          "schema": "auth",
          "comment": "auth: stores metadata about factors"
        },
        "refs": {
          "auth.mfa_challenges": "factor_id"
        }
      },
      "auth.mfa_challenges": {
        "db": {
          "schema": "auth",
          "comment": "auth: stores metadata about challenge requests made"
        }
      },
      "auth.mfa_amr_claims": {
        "db": {
          "schema": "auth",
          "comment": "auth: stores authenticator method reference claims for multi factor authentication"
        }
      },
      "auth.sso_providers": {
        "db": {
          "schema": "auth",
          "comment": "Auth: Manages SSO identity provider information; see saml_providers for SAML."
        },
        "refs": {
          "auth.sso_domains": "sso_provider_id",
          "auth.saml_providers": "sso_provider_id",
          "auth.saml_relay_states": "sso_provider_id"
        }
      },
      "auth.sso_domains": {
        "db": {
          "schema": "auth",
          "comment": "Auth: Manages SSO email address domain mapping to an SSO Identity Provider."
        }
      },
      "auth.saml_providers": {
        "db": {
          "schema": "auth",
          "comment": "Auth: Manages SAML Identity Provider connections."
        }
      },
      "auth.saml_relay_states": {
        "db": {
          "schema": "auth",
          "comment": "Auth: Contains SAML Relay State information for each Service Provider initiated login."
        }
      },
      "auth.sessions": {
        "db": {
          "schema": "auth",
          "comment": "Auth: Stores session data associated to a user."
        },
        "refs": {
          "auth.refresh_tokens": "session_id",
          "auth.mfa_amr_claims": "session_id"
        }
      },
      "auth.users": {
        "db": {
          "schema": "auth",
          "comment": "Auth: Stores user login data within a secure schema."
        },
        "columns": {
          "instance_id": {
            "db": {
              "type": "uuid",
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "id": {
            "db": {
              "type": "uuid",
              "primary": true,
              "unique": true,
              "nullable": false
            }
          },
          "aud": {
            "db": {
              "type": "string",
              "maxLength": 255,
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "role": {
            "db": {
              "type": "string",
              "maxLength": 255,
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "email": {
            "db": {
              "type": "string",
              "maxLength": 255,
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "encrypted_password": {
            "db": {
              "type": "string",
              "maxLength": 255,
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "email_confirmed_at": {
            "db": {
              "type": "timestamp",
              "useTz": true,
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "invited_at": {
            "db": {
              "type": "timestamp",
              "useTz": true,
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "confirmation_token": {
            "db": {
              "type": "string",
              "maxLength": 255,
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "confirmation_sent_at": {
            "db": {
              "type": "timestamp",
              "useTz": true,
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "recovery_token": {
            "db": {
              "type": "string",
              "maxLength": 255,
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "recovery_sent_at": {
            "db": {
              "type": "timestamp",
              "useTz": true,
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "email_change_token_new": {
            "db": {
              "type": "string",
              "maxLength": 255,
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "email_change": {
            "db": {
              "type": "string",
              "maxLength": 255,
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "email_change_sent_at": {
            "db": {
              "type": "timestamp",
              "useTz": true,
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "last_sign_in_at": {
            "db": {
              "type": "timestamp",
              "useTz": true,
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "raw_app_meta_data": {
            "db": {
              "type": "jsonb",
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "raw_user_meta_data": {
            "db": {
              "type": "jsonb",
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "is_super_admin": {
            "db": {
              "type": "boolean",
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "created_at": {
            "db": {
              "type": "timestamp",
              "useTz": true,
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "updated_at": {
            "db": {
              "type": "timestamp",
              "useTz": true,
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "phone": {
            "db": {
              "type": "text",
              "default": "",
              "primary": false,
              "unique": true,
              "nullable": true
            }
          },
          "phone_confirmed_at": {
            "db": {
              "type": "timestamp",
              "useTz": true,
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "phone_change": {
            "db": {
              "type": "text",
              "default": "",
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "phone_change_token": {
            "db": {
              "type": "string",
              "default": "",
              "maxLength": 255,
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "phone_change_sent_at": {
            "db": {
              "type": "timestamp",
              "useTz": true,
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "confirmed_at": {
            "db": {
              "type": "timestamp",
              "useTz": true,
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "email_change_token_current": {
            "db": {
              "type": "string",
              "default": "",
              "maxLength": 255,
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "email_change_confirm_status": {
            "db": {
              "type": "integer",
              "default": 0,
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "banned_until": {
            "db": {
              "type": "timestamp",
              "useTz": true,
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "reauthentication_token": {
            "db": {
              "type": "string",
              "default": "",
              "maxLength": 255,
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "reauthentication_sent_at": {
            "db": {
              "type": "timestamp",
              "useTz": true,
              "primary": false,
              "unique": false,
              "nullable": true
            }
          },
          "is_sso_user": {
            "db": {
              "type": "boolean",
              "default": "false",
              "primary": false,
              "unique": false,
              "comment": "Auth: Set this column to true when the account comes from SSO. These accounts can have duplicate emails.",
              "nullable": false
            }
          },
          "deleted_at": {
            "db": {
              "type": "timestamp",
              "useTz": true,
              "primary": false,
              "unique": false,
              "nullable": true
            }
          }
        },
        "refs": {
          "auth.mfa_factors": "user_id",
          "auth.sessions": "user_id",
          "auth.identities": "user_id"
        }
      },
      "auth.identities": {
        "db": {
          "schema": "auth",
          "comment": "Auth: Stores identities associated to a user."
        }
      },
      "auth.flow_state": {
        "db": {
          "schema": "auth",
          "comment": "stores metadata for oauth provider logins"
        }
      },
      "pgsodium.key": {
        "db": {
          "schema": "pgsodium",
          "comment": "This table holds metadata for derived keys given a key_id and key_context. The raw key is never stored."
        },
        "refs": {
          "vault.secrets": "key_id"
        }
      },
      "vault.secrets": {
        "db": {
          "schema": "vault",
          "comment": "Table with encrypted `secret` column for storing sensitive information on disk."
        }
      }
    },
    "views": {
      "extensions.pg_stat_statements_info": {
        "db": {
          "schema": "extensions"
        }
      },
      "extensions.pg_stat_statements": {
        "db": {
          "schema": "extensions"
        }
      },
      "pgsodium.mask_columns": {
        "db": {
          "schema": "pgsodium"
        }
      },
      "pgsodium.valid_key": {
        "db": {
          "schema": "pgsodium"
        }
      },
      "pgsodium.masking_rule": {
        "db": {
          "schema": "pgsodium"
        }
      },
      "pgsodium.decrypted_key": {
        "db": {
          "schema": "pgsodium"
        }
      },
      "vault.decrypted_secrets": {
        "db": {
          "schema": "vault"
        }
      }
    }
  }
}
